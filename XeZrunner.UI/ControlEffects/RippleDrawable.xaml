<!-- XeZrunner Proprietary Projects -->

<!--
RippleDrawable

This usercontrol implements the Android 5.x and newer-style Ripple effect. The code and functionality isn't neccesarily the same, 
but the intention is to visually mimick the ripple effect.
The effect is mostly comparable to the newer Marshmallow-style ripple. The ripple may or may not go to the full boundaries and/or beyond of the
control, but the center of the ripple will not expand to the center of the control.
    
~~~ HOW TO USE ~~~
Simply add this usercontrol into the content of the control as a child. You can change the radius, speed and color aswell.
Make sure the ripple is positioned in the order so that it won't be on top of the text or controls inside your control.
-->

<UserControl x:Name="usercontrol" x:Class="XeZrunner.UI.ControlEffects.RippleDrawable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:XeZrunner.UI.ControlEffects"
             mc:Ignorable="d" ClipToBounds="True"
             d:DesignHeight="300" d:DesignWidth="300" Background="Transparent" SizeChanged="usercontrol_SizeChanged" Loaded="usercontrol_Loaded">

    <UserControl.Resources>

        <!-- Default color values -->
        <SolidColorBrush x:Key="DefaultRippleColor" Color="#1F000000"/>
        <SolidColorBrush x:Key="DefaultFillColor" Color="#1F000000"/>

        <EasingDoubleKeyFrame x:Key="s_WidthHeightKeyFrame" KeyTime="0:0:2" Value="500"/>
        <EasingThicknessKeyFrame x:Key="s_MarginKeyFrame" KeyTime="0:0:2" Value="-325"/>
        <EasingDoubleKeyFrame x:Key="s_GoToMiddleKeyFrameX" KeyTime="0:0:0" Value="1"/>
        <EasingDoubleKeyFrame x:Key="s_GoToMiddleKeyFrameY" KeyTime="0:0:0" Value="1"/>

        <Storyboard x:Key="Ripple_Enter">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="rippleEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <StaticResource ResourceKey="s_WidthHeightKeyFrame"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="rippleEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <StaticResource ResourceKey="s_WidthHeightKeyFrame"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="rippleEllipse">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <StaticResource ResourceKey="s_MarginKeyFrame"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rippleEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rippleBackgroundFill">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rippleBackgroundFill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rippleEllipse">
                <StaticResource ResourceKey="s_GoToMiddleKeyFrameX"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.95" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rippleEllipse">
                <StaticResource ResourceKey="s_GoToMiddleKeyFrameY"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.95" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Ripple_Exit">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rippleBackgroundFill">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rippleBackgroundFill">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rippleEllipse">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <Button Style="{DynamicResource ButtonStyle}"
            PreviewMouseDown="usercontrol_MouseDown" PreviewMouseUp="usercontrol_PreviewMouseUp" PreviewMouseMove="Button_PreviewMouseMove" Click="Button_Click">

        <Grid>

            <Rectangle x:Name="rippleBackgroundFill" Fill="{StaticResource DefaultFillColor}" Visibility="Hidden"/>

            <Grid x:Name="rippleGrid" ClipToBounds="True" Height="0" Width="0" Margin="0">
                <Ellipse x:Name="rippleEllipse"
                     Fill="{StaticResource DefaultRippleColor}"
                     Width="0" Height="0"
                     RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Grid>

        </Grid>

    </Button>
</UserControl>
